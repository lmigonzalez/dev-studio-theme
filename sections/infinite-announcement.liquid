<section id="infinite-announcement-{{ section.id }}" class="infinite-announcement">
  <div class="marquee-container">
    <div class="marquee-content">
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
      <a href="{{ section.settings.link_url }}" class="marquee__link">{{ section.settings.link_text }}</a>
    </div>
  </div>
</section>

<style>
  .infinite-announcement {
    background-color: {{ section.settings.bg_color }};
    color: {{ section.settings.text_color }};
    overflow: hidden;
    position: relative;
  }
  
  .infinite-announcement a {
    color: {{ section.settings.text_color }};
    font-weight: {{ section.settings.font_weight }};
    text-decoration: none;
    white-space: nowrap;
  }
  
  #infinite-announcement-{{ section.id }} .marquee-container {
    width: 100%;
    overflow: hidden;
    position: relative;
  }
  
  #infinite-announcement-{{ section.id }} .marquee-content {
    display: flex;
    align-items: center;
    animation: marquee-scroll {{ section.settings.speed }}s linear infinite;
    will-change: transform;
    width: 200%;
  }
  
  #infinite-announcement-{{ section.id }} .marquee__link {
    flex-shrink: 0;
    margin-right: 3rem;
    padding: 1rem 0;
    display: block;
    white-space: nowrap;
  }
  
  @keyframes marquee-scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  
  /* Ensure smooth animation on all browsers */
  #infinite-announcement-{{ section.id }} .marquee-content {
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-play-state: running;
  }
  
  /* Ensure no gaps or blank spaces */
  #infinite-announcement-{{ section.id }} .marquee-content {
    min-width: 200%;
    position: relative;
  }
  
  /* Ensure content starts immediately */
  #infinite-announcement-{{ section.id }} .marquee-content::before {
    content: '';
    position: absolute;
    left: -100%;
    top: 0;
    width: 100%;
    height: 100%;
    background: transparent;
  }
  
  /* Pause on hover if needed (optional) */
  #infinite-announcement-{{ section.id }}:hover .marquee-content {
    animation-play-state: running;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Ensure the animation starts immediately and runs smoothly
    const marqueeContent = document.querySelector('#infinite-announcement-{{ section.id }} .marquee-content');
    if (marqueeContent) {
      // Force hardware acceleration
      marqueeContent.style.transform = 'translateZ(0)';
      
      // Ensure animation is running
      marqueeContent.style.animationPlayState = 'running';
      
      // Ensure content width is sufficient to prevent blank spaces
      const container = document.querySelector('#infinite-announcement-{{ section.id }} .marquee-container');
      if (container) {
        const containerWidth = container.offsetWidth;
        const contentWidth = marqueeContent.scrollWidth;
        
        // If content is not wide enough, duplicate more content
        if (contentWidth < containerWidth * 2) {
          const links = marqueeContent.querySelectorAll('.marquee__link');
          const linkCount = links.length;
          
          // Add more duplicates if needed
          for (let i = 0; i < Math.ceil(containerWidth / (contentWidth / linkCount)); i++) {
            links.forEach(link => {
              marqueeContent.appendChild(link.cloneNode(true));
            });
          }
        }
      }
    }
  });
</script>

{% schema %}
{
  "name": "Infinite Announcement",
  "settings": [
    {
      "type": "text",
      "id": "link_text",
      "label": "Link text",
      "default": "Your announcement here"
    },
    {
      "type": "url",
      "id": "link_url",
      "label": "Link URL",
      "default": "/"
    },
    {
      "type": "number",
      "id": "speed",
      "label": "Scroll speed (seconds)",
      "default": 20
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color",
      "default": "#B21F1D"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "select",
      "id": "font_weight",
      "label": "Font weight",
      "default": "700",
      "options": [
        {
          "value": "100",
          "label": "Thin (100)"
        },
        {
          "value": "200",
          "label": "Extra-light (200)"
        },
        {
          "value": "300",
          "label": "Light (300)"
        },
        {
          "value": "400",
          "label": "Normal (400)"
        },
        {
          "value": "500",
          "label": "Medium (500)"
        },
        {
          "value": "600",
          "label": "Semi-bold (600)"
        },
        {
          "value": "700",
          "label": "Bold (700)"
        },
        {
          "value": "800",
          "label": "Extra-bold (800)"
        },
        {
          "value": "900",
          "label": "Black (900)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Infinite Announcement",
      "category": "Custom"
    }
  ]
}
{% endschema %}
